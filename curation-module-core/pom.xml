<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>eu.clarin.cmdi</groupId>
	<artifactId>curation-module-core</artifactId>
	<version>1.0-SNAPSHOT</version>

	<!-- 
	vtd-xml 2.12 is not in the maven central repository yet but this project is using this version. Here are instrructions on how to use vtd-xml 2.12
		1. download zip from: https://sourceforge.net/projects/vtd-xml/files/vtd-xml/ximpleware_2.12/ximpleware-2.12-java.zip/
		2. unpack and rebuild the library (make sure that jar contains VtdGen.class, sometimes it doesnt)
		3. install it in the local maven repository with the command:
			mvn install:install-file -Dfile=vtd-xml.jar -DgroupId=com.ximpleware -DartifactId=vtd-xml -Dversion=2.12 -Dpackaging=jar
		4. now you can build curation module project
	-->
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<humanize.version>1.2.2</humanize.version>
		<junit.version>4.12</junit.version>
		<slf4j.version>1.7.12</slf4j.version>
		<vtd-xml.version>2.12</vtd-xml.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.ximpleware</groupId>
			<artifactId>vtd-xml</artifactId>
			<version>${vtd-xml.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.mfornos</groupId>
			<artifactId>humanize-slim</artifactId>
			<version>${humanize.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-jcs-core</artifactId>
			<version>2.0-beta-1</version>
		</dependency>

		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.10</version>
		</dependency>
	</dependencies>




	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5</version>
			</plugin>
			<!-- don't create jar, leave this to maven-assembly -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.5</version>
				<executions>
					<execution>
						<id>build-jar-with-dependencies</id>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
							<archive>
								<manifest>
									<mainClass>eu.clarin.cmdi.curation.main.Main</mainClass>
								</manifest>
							</archive>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<finalName>${project.artifactId}-${project.version}</finalName>
						</configuration>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
					<execution>
						<id>build-distribution</id>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/assembly/dist.xml</descriptor>
							</descriptors>
							<finalName>curation-module-${project.version}</finalName>
						</configuration>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>